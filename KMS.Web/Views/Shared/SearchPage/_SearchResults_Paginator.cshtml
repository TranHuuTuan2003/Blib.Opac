@using KMS.Web.Common
@using KMS.Web.ViewModels.Shared.Components.SearchPage
@model SearchResultViewModel

@{
	int totalPages = (int)Math.Ceiling((double)Model.totalRecords / Model.pageSize);
}

@if (totalPages > 1)
{
	<nav class="mt-3 mt-sm-4">
		<ul class="pagination-custom">
			<li class="first page-item @(Model.currentPage == 1 ? "disabled" : "")">
				<a class="page-link">@Html.PaginationFirstIcon(true)</a>
			</li>

			<li class="previous page-item @(Model.currentPage == 1 ? "disabled" : "")">
				<a class="page-link">@Html.PaginationPrevIcon(true)</a>
			</li>

			@if (Model.currentPage > 3)
			{
				<li class="page-item disabled"><span class="page-link">...</span></li>
			}

			@for (int i = Math.Max(1, Model.currentPage - 1); i <= Math.Min(totalPages, Model.currentPage + 1); i++)
			{
				<li class="page-item @(Model.currentPage == i ? "active" : "")">
					<a class="page-link has-number">@i</a>
				</li>
			}

			@if (Model.currentPage < totalPages - 2)
			{
				<li class="page-item disabled"><span class="page-link">...</span></li>
			}

			<li class="next page-item @(Model.currentPage == totalPages ? "disabled" : "")">
				<a class="page-link">@Html.PaginationNextIcon(true)</a>
			</li>

			<li data-page="@Model.totalPages" class="last page-item @(Model.currentPage == totalPages ? "disabled" : "")">
				<a class="page-link">@Html.PaginationLastIcon(true)</a>
			</li>
		</ul>
	</nav>
}